---
import type { CollectionEntry } from "astro:content";

interface Props {
	post: CollectionEntry<"post">;
}

const { post } = Astro.props;
const {
	data: { description, ogImage, publishDate, title, updatedDate },
	slug,
} = post;
const socialImage = ogImage ?? `/og-image/${slug}.png`;
const { headings } = await post.render();
---

<div title={title}>
	<div class="">
		<article class="" data-pagefind-body>
			<div class="">
				<slot />
			</div>
		</article>
	</div>
	<button aria-label="Back to Top" class="" data-show="false" id="to-top-btn"
		><svg
			aria-hidden="true"
			class="h-6 w-6"
			fill="none"
			focusable="false"
			stroke="currentColor"
			stroke-width="2"
			viewBox="0 0 24 24"
			xmlns="http://www.w3.org/2000/svg"
		>
			<path
				d="M4.5 15.75l7.5-7.5 7.5 7.5"
				stroke-linecap="round"
				stroke-linejoin="round"></path>
		</svg>
	</button>
</div>

<script>
	const scrollBtn = document.getElementById(
		"to-top-btn",
	) as HTMLButtonElement;
	const targetHeader = document.getElementById("blog-hero") as HTMLDivElement;

	function callback(entries: IntersectionObserverEntry[]) {
		entries.forEach((entry) => {
			// only show the scroll to top button when the heading is out of view
			scrollBtn.dataset.show = (!entry.isIntersecting).toString();
		});
	}

	scrollBtn.addEventListener("click", () => {
		document.documentElement.scrollTo({ behavior: "smooth", top: 0 });
	});

	const observer = new IntersectionObserver(callback);
	observer.observe(targetHeader);
</script>
